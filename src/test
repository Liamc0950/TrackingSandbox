[
  {
    "name": "google_calendar_clear_primary_calendar",
    "description": "Clears a primary calendar. This operation deletes all events associated with the specified calendar.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar.\n- To retrieve calendar IDs, call the `calendarList.list` method.\n- Use the keyword \"primary\" to access the primary calendar of the currently logged-in user."
        }
      },
      "required": [
        "calendarId"
      ]
    }
  },
  {
    "name": "google_calendar_create_access_control_rule",
    "description": "Creates a new access control rule for the specified calendar.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The ID of the calendar to create the rule for."
        },
        "sendNotifications": {
          "type": "boolean",
          "description": "Whether to send notifications to the rule's scope. Defaults to True."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The rule details:\n- role (str): The role to assign (e.g., 'reader', 'writer').\n- scope (Dict[str, str]): The scope of the rule:\n    - type (str): The type of scope (e.g., 'user', 'group').\n    - value (str): The value of the scope (e.g., email address).\n- ruleId (str, optional): The ID of the rule. If not provided, one will be generated. [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      },
      "required": [
        "calendarId"
      ]
    }
  },
  {
    "name": "google_calendar_create_calendar_list_entry",
    "description": "Creates a new calendar list entry in the user's calendar list.",
    "parameters": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The resource to create the calendar list entry with.\n- id (str, optional): The ID of the calendar list entry. If not provided, a UUID will be generated.\n- summary (str): The summary of the calendar list entry.\n- description (str): The description of the calendar list entry.\n- timeZone (str): The time zone of the calendar list entry (e.g. \"America/New_York\"). [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      }
    }
  },
  {
    "name": "google_calendar_create_event",
    "description": "Creates a new event in the specified calendar.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar. Defaults to \"primary\"."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The event to create:\n- id (str, optional): The identifier of the event. If not provided,\n    a new UUID will be generated.\n- summary (str): The summary/title of the event.\n- description (str, optional): The description of the event.\n- start (Dict[str, Any]): The start time of the event.\n    - dateTime (str): The date and time of the start time in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format.\n- end (Dict[str, Any]): The end time of the event.\n    - dateTime (str): The date and time of the end time in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format. [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      }
    }
  },
  {
    "name": "google_calendar_create_secondary_calendar",
    "description": "Creates a secondary calendar.",
    "parameters": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The resource to create the calendar with.\n- id (str, optional): The identifier of the calendar.\n- summary (str, optional): The Title of the calendar.\n- description (str, optional): The description of the calendar.\n- timeZone (str, optional): The time zone of the calendar (e.g. \"America/New_York\").\n- location (str, optional): Geographic location of the calendar as free-form text.\n- etag (str, optional): ETag of the resource. Used for optimistic concurrency control.\n- kind (str, optional): Type of the resource (\"calendar#calendar\").\n- conferenceProperties (Dict[str, Any], optional): Conference-related properties.\n    - allowedConferenceSolutionTypes (List[str], optional): List of conference solution types that are supported for this calendar.\n        Each string in the list can be one of:\n        - \"eventHangout\"\n        - \"eventNamedHangout\"\n        - \"hangoutsMeet\" [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      }
    }
  },
  {
    "name": "google_calendar_delete_access_control_rule",
    "description": "Deletes an access control rule from the specified calendar.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The ID of the calendar to delete the rule from."
        },
        "ruleId": {
          "type": "string",
          "description": "The ID of the rule to delete."
        }
      },
      "required": [
        "calendarId",
        "ruleId"
      ]
    }
  },
  {
    "name": "google_calendar_delete_calendar_list_entry",
    "description": "Deletes a calendar list entry from the user's calendar list.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The ID of the calendar list entry to delete."
        }
      },
      "required": [
        "calendarId"
      ]
    }
  },
  {
    "name": "google_calendar_delete_event",
    "description": "Deletes an event from the specified calendar.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar containing the event to delete."
        },
        "eventId": {
          "type": "string",
          "description": "The identifier of the event to delete."
        },
        "sendNotifications": {
          "type": "boolean",
          "description": "Whether to send notifications about the deletion.\nDefaults to False."
        },
        "sendUpdates": {
          "type": "string",
          "description": "Whether to send updates about the deletion.\nPossible values: \"all\", \"externalOnly\", \"none\". Defaults to None."
        }
      },
      "required": [
        "calendarId",
        "eventId"
      ]
    }
  },
  {
    "name": "google_calendar_delete_secondary_calendar",
    "description": "Deletes a secondary calendar. This operation removes the calendar from the user's calendar list.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar.\n- To retrieve calendar IDs, call the `calendarList.list` method.\n- Use the keyword \"primary\" to access the primary calendar of the currently logged-in user."
        }
      },
      "required": [
        "calendarId"
      ]
    }
  },
  {
    "name": "google_calendar_get_access_control_rule",
    "description": "Retrieves an access control rule from the specified calendar.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The ID of the calendar to get the rule from."
        },
        "ruleId": {
          "type": "string",
          "description": "The ID of the rule to retrieve."
        }
      },
      "required": [
        "calendarId",
        "ruleId"
      ]
    }
  },
  {
    "name": "google_calendar_get_calendar_and_event_colors",
    "description": "Returns the color definitions for calendars and events.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "google_calendar_get_calendar_list_entry",
    "description": "Retrieves a calendar list entry from the user's calendar list.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The ID of the calendar list entry to retrieve."
        }
      },
      "required": [
        "calendarId"
      ]
    }
  },
  {
    "name": "google_calendar_get_calendar_metadata",
    "description": "Retrieves metadata for a specified calendar.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar.\n- To retrieve calendar IDs, call the `calendarList.list` method.\n- Use the keyword \"primary\" to access the primary calendar of the currently logged-in user."
        }
      },
      "required": [
        "calendarId"
      ]
    }
  },
  {
    "name": "google_calendar_get_event",
    "description": "Retrieves an event from the specified calendar.",
    "parameters": {
      "type": "object",
      "properties": {
        "alwaysIncludeEmail": {
          "type": "boolean",
          "description": "Deprecated and ignored."
        },
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar. Defaults to \"primary\".\nTo retrieve calendar IDs call the calendarList.list method.\nIf you want to access the primary calendar of the currently logged in user,\nuse the \"primary\" keyword."
        },
        "eventId": {
          "type": "string",
          "description": "The identifier of the event to retrieve."
        },
        "maxAttendees": {
          "type": "integer",
          "description": "The maximum number of attendees to return.\nDefaults to None (return all attendees)."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone to use for the response(e.g. \"America/New_York\").\nDefaults to the calendar's time zone."
        }
      }
    }
  },
  {
    "name": "google_calendar_import_event",
    "description": "Imports an event into the specified calendar.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar."
        },
        "conferenceDataVersion": {
          "type": "integer",
          "description": "The version of the conference data.\nDefaults to 0."
        },
        "supportsAttachments": {
          "type": "boolean",
          "description": "Whether the event supports attachments.\nDefaults to False."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The event to import:\n- id (str, optional): The identifier of the event. If not provided,\n    a new UUID will be generated.\n- summary (str): The summary/title of the event.\n- description (str, optional): The description of the event.\n- start (Dict[str, Any]): The start time of the event.\n    - dateTime (str): The date and time of the start time in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format.\n- end (Dict[str, Any]): The end time of the event.\n    - dateTime (str): The date and time of the end time in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format. [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      },
      "required": [
        "calendarId"
      ]
    }
  },
  {
    "name": "google_calendar_list_access_control_rules",
    "description": "Lists all access control rules for the specified calendar.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The ID of the calendar to list rules for."
        },
        "maxResults": {
          "type": "integer",
          "description": "Maximum number of rules to return. Defaults to 100."
        },
        "pageToken": {
          "type": "string",
          "description": "Token for pagination. Not implemented."
        },
        "showDeleted": {
          "type": "boolean",
          "description": "Whether to include deleted rules. Not implemented."
        },
        "syncToken": {
          "type": "string",
          "description": "Token for synchronization. Not implemented."
        }
      },
      "required": [
        "calendarId"
      ]
    }
  },
  {
    "name": "google_calendar_list_calendar_list_entries",
    "description": "Lists all calendar list entries in the user's calendar list.",
    "parameters": {
      "type": "object",
      "properties": {
        "maxResults": {
          "type": "integer",
          "description": "Maximum number of calendar list entries to return.\nDefaults to 100."
        }
      }
    }
  },
  {
    "name": "google_calendar_list_event_instances",
    "description": "Returns instances of a specified recurring event.\n\nThis is a mock, so we won't actually expand recurrences.\nWe'll pretend the event itself is the only instance.",
    "parameters": {
      "type": "object",
      "properties": {
        "alwaysIncludeEmail": {
          "type": "boolean",
          "description": "Whether to include the email address of the event creator."
        },
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar."
        },
        "eventId": {
          "type": "string",
          "description": "The identifier of the event."
        },
        "maxAttendees": {
          "type": "integer",
          "description": "The maximum number of attendees to return.\nDefaults to None (return all attendees)."
        },
        "maxResults": {
          "type": "integer",
          "description": "The maximum number of instances to return.\nDefaults to 250."
        },
        "originalStart": {
          "type": "string",
          "description": "The original start time of the instance."
        },
        "pageToken": {
          "type": "string",
          "description": "The token for the next page of results."
        },
        "showDeleted": {
          "type": "boolean",
          "description": "Whether to include deleted instances.\nDefaults to False."
        },
        "timeMax": {
          "type": "string",
          "description": "The maximum time of the instances to return in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format."
        },
        "timeMin": {
          "type": "string",
          "description": "The minimum time of the instances to return in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone to use for the response(e.g. \"America/New_York\").\nDefaults to the calendar's time zone."
        }
      }
    }
  },
  {
    "name": "google_calendar_list_events",
    "description": "Lists events from the specified calendar.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar. Defaults to \"primary\"."
        },
        "maxResults": {
          "type": "integer",
          "description": "The maximum number of events to return.\nDefaults to 250."
        },
        "timeMin": {
          "type": "string",
          "description": "The minimum time of the events to return in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format."
        },
        "timeMax": {
          "type": "string",
          "description": "The maximum time of the events to return in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format."
        },
        "q": {
          "type": "string",
          "description": "The query string to filter events by."
        }
      }
    }
  },
  {
    "name": "google_calendar_move_event",
    "description": "Moves an event from one calendar to another. We simulate by removing from old\n\nand creating in new with same ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The identifier of the source calendar."
        },
        "eventId": {
          "type": "string",
          "description": "The identifier of the event to move."
        },
        "destination": {
          "type": "string",
          "description": "The identifier of the destination calendar."
        },
        "sendNotifications": {
          "type": "boolean",
          "description": "Whether to send notifications about the move.\nDefaults to False."
        },
        "sendUpdates": {
          "type": "string",
          "description": "Whether to send updates about the move.\nPossible values: \"all\", \"externalOnly\", \"none\". Defaults to None."
        }
      },
      "required": [
        "calendarId",
        "destination",
        "eventId"
      ]
    }
  },
  {
    "name": "google_calendar_patch_access_control_rule",
    "description": "Updates specific fields of an existing access control rule.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The ID of the calendar containing the rule."
        },
        "ruleId": {
          "type": "string",
          "description": "The ID of the rule to update."
        },
        "sendNotifications": {
          "type": "boolean",
          "description": "Whether to send notifications. Defaults to True."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The fields to update:\n- role (str, optional): New role to assign.\n- scope (Dict[str, str], optional): New scope settings.\n- Any other rule fields to update. [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      },
      "required": [
        "calendarId",
        "ruleId"
      ]
    }
  },
  {
    "name": "google_calendar_patch_calendar_list_entry",
    "description": "Updates specific fields of an existing calendar list entry.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The ID of the calendar list entry to patch."
        },
        "colorRgbFormat": {
          "type": "boolean",
          "description": "Whether to use RGB color format. Defaults to False."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The resource to patch the calendar list entry with.\n- summary (str, optional): The summary of the calendar list entry.\n- description (str, optional): The description of the calendar list entry.\n- timeZone (str, optional): The time zone of the calendar list entry (e.g. \"America/New_York\"). [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      },
      "required": [
        "calendarId"
      ]
    }
  },
  {
    "name": "google_calendar_patch_calendar_metadata",
    "description": "Updates specific fields of an existing calendar.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar.\n- To retrieve calendar IDs, call the `calendarList.list` method.\n- Use the keyword \"primary\" to access the primary calendar of the currently logged-in user."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The resource to patch the calendar with.\n- summary (str, optional): The summary of the calendar.\n- description (str, optional): The description of the calendar.\n- timeZone (str, optional): The time zone of the calendar (e.g. \"America/New_York\"). [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      },
      "required": [
        "calendarId"
      ]
    }
  },
  {
    "name": "google_calendar_patch_event",
    "description": "Updates specific fields of an existing event.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar. Defaults to \"primary\"."
        },
        "eventId": {
          "type": "string",
          "description": "The identifier of the event to update."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The fields to update:\n- summary (str, optional): The new summary/title of the event.\n- description (str, optional): The new description of the event.\n- start (Dict[str, Any], optional): The new start time of the event in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format.\n- end (Dict[str, Any], optional): The new end time of the event in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format.\n- attendees (List[Dict[str, Any]], optional): The new list of attendees.\n- location (str, optional): The new location of the event.\n- recurrence (List[str], optional): The new recurrence rules of the event.\n- reminders (Dict[str, Any], optional): The new reminders of the event. [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      }
    }
  },
  {
    "name": "google_calendar_quick_add_event",
    "description": "Creates an event based on a simple text string.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar."
        },
        "sendNotifications": {
          "type": "boolean",
          "description": "Whether to send notifications about the creation.\nDefaults to False."
        },
        "sendUpdates": {
          "type": "string",
          "description": "Whether to send updates about the creation.\nPossible values: \"all\", \"externalOnly\", \"none\". Defaults to None."
        },
        "text": {
          "type": "string",
          "description": "The text to parse into an event. This should be a natural language\ndescription of the event, such as \"Lunch with John at noon tomorrow\"."
        }
      },
      "required": [
        "calendarId"
      ]
    }
  },
  {
    "name": "google_calendar_stop_notification_channel",
    "description": "Stops watching resources through a channel. This operation removes the channel from the\n\nlist of active channels and prevents further notifications from being sent.",
    "parameters": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The resource to stop the channel with.\n- id (str, optional): The identifier of the channel. [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      }
    }
  },
  {
    "name": "google_calendar_update_access_control_rule",
    "description": "Replaces an existing access control rule with new data.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The ID of the calendar containing the rule."
        },
        "ruleId": {
          "type": "string",
          "description": "The ID of the rule to update."
        },
        "sendNotifications": {
          "type": "boolean",
          "description": "Whether to send notifications. Defaults to True."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The complete new rule data:\n- role (str): New role to assign.\n- scope (Dict[str, str]): New scope settings.\n- Any other rule fields to include. [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      },
      "required": [
        "calendarId",
        "ruleId"
      ]
    }
  },
  {
    "name": "google_calendar_update_calendar_list_entry",
    "description": "Replaces an existing calendar list entry with new data.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The ID of the calendar list entry to replace."
        },
        "colorRgbFormat": {
          "type": "boolean",
          "description": "Whether to use RGB color format. Defaults to False."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The resource to replace the calendar list entry with.\n- summary (str, optional): The summary of the calendar list entry.\n- description (str, optional): The description of the calendar list entry.\n- timeZone (str, optional): The time zone of the calendar list entry (e.g. \"America/New_York\"). [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      },
      "required": [
        "calendarId"
      ]
    }
  },
  {
    "name": "google_calendar_update_calendar_metadata",
    "description": "Replaces an existing calendar with new data.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar.\n- To retrieve calendar IDs, call the `calendarList.list` method.\n- Use the keyword \"primary\" to access the primary calendar of the currently logged-in user."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The resource to update the calendar with.\n- summary (str, optional): The summary of the calendar.\n- description (str, optional): The description of the calendar.\n- timeZone (str, optional): The time zone of the calendar (e.g. \"America/New_York\"). [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      },
      "required": [
        "calendarId"
      ]
    }
  },
  {
    "name": "google_calendar_update_event",
    "description": "Replaces an existing event with new data.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar"
        },
        "eventId": {
          "type": "string",
          "description": "The identifier of the event to update."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The complete new event data:\n- id (str): The identifier of the event.\n- summary (str): The summary/title of the event.\n- description (str, optional): The description of the event.\n- start (Dict[str, Any]): The start time of the event in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format.\n- end (Dict[str, Any]): The end time of the event in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format.\n- attendees (List[Dict[str, Any]], optional): The list of attendees.\n- location (str, optional): The location of the event.\n- recurrence (List[str], optional): The recurrence rules of the event.\n- reminders (Dict[str, Any], optional): The reminders of the event. [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      }
    }
  },
  {
    "name": "google_calendar_watch_access_control_rule_changes",
    "description": "Sets up a watch for changes to access control rules.",
    "parameters": {
      "type": "object",
      "properties": {
        "calendarId": {
          "type": "string",
          "description": "The ID of the calendar to watch."
        },
        "maxResults": {
          "type": "integer",
          "description": "Maximum number of rules to return. Defaults to 100."
        },
        "pageToken": {
          "type": "string",
          "description": "Token for pagination. Not implemented."
        },
        "showDeleted": {
          "type": "boolean",
          "description": "Whether to include deleted rules. Not implemented."
        },
        "syncToken": {
          "type": "string",
          "description": "Token for synchronization. Not implemented."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "Watch configuration:\n- type (str): Type of watch (defaults to \"web_hook\").\n- id (str, optional): Channel ID. If not provided, one will be generated. [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      },
      "required": [
        "calendarId"
      ]
    }
  },
  {
    "name": "google_calendar_watch_calendar_list_changes",
    "description": "Sets up a watch for changes to calendar list entries.",
    "parameters": {
      "type": "object",
      "properties": {
        "maxResults": {
          "type": "integer",
          "description": "Maximum number of calendar list entries to return.\nDefaults to 100."
        },
        "minAccessRole": {
          "type": "string",
          "description": "The minimum access role required to view the\ncalendar list entries. Not implemented."
        },
        "pageToken": {
          "type": "string",
          "description": "Token for pagination. Not implemented."
        },
        "showDeleted": {
          "type": "boolean",
          "description": "Whether to include deleted calendar list entries.\nNot implemented."
        },
        "showHidden": {
          "type": "boolean",
          "description": "Whether to include hidden calendar list entries.\nNot implemented."
        },
        "syncToken": {
          "type": "string",
          "description": "Token for synchronization. Not implemented."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "Watch configuration:\n- id (str, optional): Channel ID. If not provided, one will be generated.\n- type (str, optional): Type of watch. Defaults to \"web_hook\". [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      }
    }
  },
  {
    "name": "google_calendar_watch_event_changes",
    "description": "Sets up a watch for changes to events in the specified calendar.",
    "parameters": {
      "type": "object",
      "properties": {
        "alwaysIncludeEmail": {
          "type": "boolean",
          "description": "Whether to always include the email address\nof the event creator. Defaults to False."
        },
        "calendarId": {
          "type": "string",
          "description": "The identifier of the calendar."
        },
        "eventTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The types of events to watch for.\nPossible values: \"default\", \"focusTime\", \"outOfOffice\"."
        },
        "iCalUID": {
          "type": "string",
          "description": "The iCalUID of the event."
        },
        "maxAttendees": {
          "type": "integer",
          "description": "The maximum number of attendees to return.\nDefaults to None (return all attendees)."
        },
        "maxResults": {
          "type": "integer",
          "description": "The maximum number of events to return.\nDefaults to 250."
        },
        "orderBy": {
          "type": "string",
          "description": "The order of the events.\nPossible values: \"startTime\", \"updated\"."
        },
        "pageToken": {
          "type": "string",
          "description": "The token for the next page of results."
        },
        "privateExtendedProperty": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The private extended properties to filter by."
        },
        "q": {
          "type": "string",
          "description": "The query string to filter events by."
        },
        "sharedExtendedProperty": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The shared extended properties to filter by."
        },
        "showDeleted": {
          "type": "boolean",
          "description": "Whether to include deleted events.\nDefaults to False."
        },
        "showHiddenInvitations": {
          "type": "boolean",
          "description": "Whether to include hidden invitations.\nDefaults to False."
        },
        "singleEvents": {
          "type": "boolean",
          "description": "Whether to expand recurring events into single events.\nDefaults to False."
        },
        "syncToken": {
          "type": "string",
          "description": "The token for synchronization."
        },
        "timeMax": {
          "type": "string",
          "description": "The maximum time of the events to watch for in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format."
        },
        "timeMin": {
          "type": "string",
          "description": "The minimum time of the events to watch for in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone to use for the response(e.g. \"America/New_York\").\nDefaults to the calendar's time zone."
        },
        "updatedMin": {
          "type": "string",
          "description": "The minimum time of the last update to watch for in ISO 8601(YYYY-MM-DDTHH:MM:SSZ) format."
        },
        "resource": {
          "type": "object",
          "properties": {},
          "description": "The watch configuration:\n- id (str, optional): The identifier of the watch. If not provided,\n    a new UUID will be generated.\n- type (str, optional): The type of the watch. Defaults to \"web_hook\".\n- address (str, optional): The address to send notifications to. [An object/dictionary. Python type hint indicates keys of type 'str' and values of type 'Any'.]"
        }
      }
    }
  }
]